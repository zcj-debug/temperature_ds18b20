|temp_top
clk => clk.IN3
rst_n => rst_n.IN3
key_in[0] => key_in[0].IN1
key_in[1] => key_in[1].IN1
key_in[2] => key_in[2].IN1
dq <> ds18b20:U_ds18b20.dq_out
dq <> ds18b20:U_ds18b20.dq_in
SEL[0] <= dig_demo:U_dig_demo.SEL
SEL[1] <= dig_demo:U_dig_demo.SEL
SEL[2] <= dig_demo:U_dig_demo.SEL
SEL[3] <= dig_demo:U_dig_demo.SEL
SEL[4] <= dig_demo:U_dig_demo.SEL
SEL[5] <= dig_demo:U_dig_demo.SEL
DIG[0] <= dig_demo:U_dig_demo.DIG
DIG[1] <= dig_demo:U_dig_demo.DIG
DIG[2] <= dig_demo:U_dig_demo.DIG
DIG[3] <= dig_demo:U_dig_demo.DIG
DIG[4] <= dig_demo:U_dig_demo.DIG
DIG[5] <= dig_demo:U_dig_demo.DIG
DIG[6] <= dig_demo:U_dig_demo.DIG
DIG[7] <= dig_demo:U_dig_demo.DIG


|temp_top|ds18b20:U_ds18b20
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => receive_data[0].CLK
clk => receive_data[1].CLK
clk => receive_data[2].CLK
clk => receive_data[3].CLK
clk => receive_data[4].CLK
clk => receive_data[5].CLK
clk => receive_data[6].CLK
clk => receive_data[7].CLK
clk => receive_data[8].CLK
clk => receive_data[9].CLK
clk => receive_data[10].CLK
clk => receive_data[11].CLK
clk => receive_data[12].CLK
clk => receive_data[13].CLK
clk => receive_data[14].CLK
clk => receive_data[15].CLK
clk => cnt_byte[0].CLK
clk => cnt_byte[1].CLK
clk => cnt_byte[2].CLK
clk => cnt_byte[3].CLK
clk => cnt_bit[0].CLK
clk => cnt_bit[1].CLK
clk => cnt_bit[2].CLK
clk => cnt_slot[0].CLK
clk => cnt_slot[1].CLK
clk => cnt_slot[2].CLK
clk => cnt_slot[3].CLK
clk => cnt_slot[4].CLK
clk => cnt_slot[5].CLK
clk => cnt_slot[6].CLK
clk => cnt_slot[7].CLK
clk => cnt_slot[8].CLK
clk => cnt_slot[9].CLK
clk => cnt_slot[10].CLK
clk => cnt_slot[11].CLK
clk => cnt_slot[12].CLK
clk => cnt_slot[13].CLK
clk => cnt_slot[14].CLK
clk => receive_en.CLK
clk => flag_read.CLK
clk => flag_convert.CLK
clk => ratio_out[0]~reg0.CLK
clk => ratio_out[1]~reg0.CLK
clk => flag_set.CLK
clk => cnt_400ms[0].CLK
clk => cnt_400ms[1].CLK
clk => cnt_400ms[2].CLK
clk => cnt_400ms[3].CLK
clk => cnt_400ms[4].CLK
clk => cnt_400ms[5].CLK
clk => cnt_400ms[6].CLK
clk => cnt_400ms[7].CLK
clk => cnt_400ms[8].CLK
clk => cnt_400ms[9].CLK
clk => cnt_400ms[10].CLK
clk => cnt_400ms[11].CLK
clk => cnt_400ms[12].CLK
clk => cnt_400ms[13].CLK
clk => cnt_400ms[14].CLK
clk => cnt_400ms[15].CLK
clk => cnt_400ms[16].CLK
clk => cnt_400ms[17].CLK
clk => cnt_400ms[18].CLK
clk => cnt_400ms[19].CLK
clk => cnt_400ms[20].CLK
clk => cnt_400ms[21].CLK
clk => cnt_400ms[22].CLK
clk => cnt_400ms[23].CLK
clk => ratio~1.DATAIN
clk => state_c~1.DATAIN
rst_n => data_out[0]~reg0.ACLR
rst_n => data_out[1]~reg0.ACLR
rst_n => data_out[2]~reg0.ACLR
rst_n => data_out[3]~reg0.ACLR
rst_n => data_out[4]~reg0.ACLR
rst_n => data_out[5]~reg0.ACLR
rst_n => data_out[6]~reg0.ACLR
rst_n => data_out[7]~reg0.ACLR
rst_n => data_out[8]~reg0.ACLR
rst_n => data_out[9]~reg0.ACLR
rst_n => data_out[10]~reg0.ACLR
rst_n => data_out[11]~reg0.ACLR
rst_n => data_out[12]~reg0.ACLR
rst_n => data_out[13]~reg0.ACLR
rst_n => data_out[14]~reg0.ACLR
rst_n => data_out[15]~reg0.ACLR
rst_n => ratio_out[0]~reg0.ACLR
rst_n => ratio_out[1]~reg0.ACLR
rst_n => cnt_400ms[0].ACLR
rst_n => cnt_400ms[1].ACLR
rst_n => cnt_400ms[2].ACLR
rst_n => cnt_400ms[3].ACLR
rst_n => cnt_400ms[4].ACLR
rst_n => cnt_400ms[5].ACLR
rst_n => cnt_400ms[6].ACLR
rst_n => cnt_400ms[7].ACLR
rst_n => cnt_400ms[8].ACLR
rst_n => cnt_400ms[9].ACLR
rst_n => cnt_400ms[10].ACLR
rst_n => cnt_400ms[11].ACLR
rst_n => cnt_400ms[12].ACLR
rst_n => cnt_400ms[13].ACLR
rst_n => cnt_400ms[14].ACLR
rst_n => cnt_400ms[15].ACLR
rst_n => cnt_400ms[16].ACLR
rst_n => cnt_400ms[17].ACLR
rst_n => cnt_400ms[18].ACLR
rst_n => cnt_400ms[19].ACLR
rst_n => cnt_400ms[20].ACLR
rst_n => cnt_400ms[21].ACLR
rst_n => cnt_400ms[22].ACLR
rst_n => cnt_400ms[23].ACLR
rst_n => flag_set.ACLR
rst_n => flag_convert.ACLR
rst_n => flag_read.ACLR
rst_n => receive_en.ACLR
rst_n => cnt_slot[0].ACLR
rst_n => cnt_slot[1].ACLR
rst_n => cnt_slot[2].ACLR
rst_n => cnt_slot[3].ACLR
rst_n => cnt_slot[4].ACLR
rst_n => cnt_slot[5].ACLR
rst_n => cnt_slot[6].ACLR
rst_n => cnt_slot[7].ACLR
rst_n => cnt_slot[8].ACLR
rst_n => cnt_slot[9].ACLR
rst_n => cnt_slot[10].ACLR
rst_n => cnt_slot[11].ACLR
rst_n => cnt_slot[12].ACLR
rst_n => cnt_slot[13].ACLR
rst_n => cnt_slot[14].ACLR
rst_n => cnt_bit[0].ACLR
rst_n => cnt_bit[1].ACLR
rst_n => cnt_bit[2].ACLR
rst_n => cnt_byte[0].ACLR
rst_n => cnt_byte[1].ACLR
rst_n => cnt_byte[2].ACLR
rst_n => cnt_byte[3].ACLR
rst_n => receive_data[0].ACLR
rst_n => receive_data[1].ACLR
rst_n => receive_data[2].ACLR
rst_n => receive_data[3].ACLR
rst_n => receive_data[4].ACLR
rst_n => receive_data[5].ACLR
rst_n => receive_data[6].ACLR
rst_n => receive_data[7].ACLR
rst_n => receive_data[8].ACLR
rst_n => receive_data[9].ACLR
rst_n => receive_data[10].ACLR
rst_n => receive_data[11].ACLR
rst_n => receive_data[12].ACLR
rst_n => receive_data[13].ACLR
rst_n => receive_data[14].ACLR
rst_n => receive_data[15].ACLR
rst_n => ratio~3.DATAIN
rst_n => state_c~3.DATAIN
press[0] => WideOr4.IN0
press[0] => Mux0.IN9
press[0] => Mux1.IN9
press[0] => Mux2.IN9
press[0] => Mux3.IN9
press[1] => WideOr4.IN1
press[1] => Mux0.IN8
press[1] => Mux1.IN8
press[1] => Mux2.IN8
press[1] => Mux3.IN8
press[2] => WideOr4.IN2
press[2] => Mux0.IN7
press[2] => Mux1.IN7
press[2] => Mux2.IN7
press[2] => Mux3.IN7
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.DATAB
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_in => receive_data.OUTPUTSELECT
dq_out <= dq_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ratio_out[0] <= ratio_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ratio_out[1] <= ratio_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|temp_top|dig_demo:U_dig_demo
clk => SEL[0]~reg0.CLK
clk => SEL[1]~reg0.CLK
clk => SEL[2]~reg0.CLK
clk => SEL[3]~reg0.CLK
clk => SEL[4]~reg0.CLK
clk => SEL[5]~reg0.CLK
clk => cnt_flicker[0].CLK
clk => cnt_flicker[1].CLK
clk => cnt_flicker[2].CLK
clk => cnt_flicker[3].CLK
clk => cnt_flicker[4].CLK
clk => cnt_flicker[5].CLK
clk => cnt_flicker[6].CLK
clk => cnt_flicker[7].CLK
clk => cnt_flicker[8].CLK
clk => cnt_flicker[9].CLK
clk => cnt_flicker[10].CLK
clk => cnt_flicker[11].CLK
clk => cnt_flicker[12].CLK
clk => cnt_flicker[13].CLK
clk => cnt_flicker[14].CLK
clk => cnt_flicker[15].CLK
rst_n => cnt_flicker[0].ACLR
rst_n => cnt_flicker[1].ACLR
rst_n => cnt_flicker[2].ACLR
rst_n => cnt_flicker[3].ACLR
rst_n => cnt_flicker[4].ACLR
rst_n => cnt_flicker[5].ACLR
rst_n => cnt_flicker[6].ACLR
rst_n => cnt_flicker[7].ACLR
rst_n => cnt_flicker[8].ACLR
rst_n => cnt_flicker[9].ACLR
rst_n => cnt_flicker[10].ACLR
rst_n => cnt_flicker[11].ACLR
rst_n => cnt_flicker[12].ACLR
rst_n => cnt_flicker[13].ACLR
rst_n => cnt_flicker[14].ACLR
rst_n => cnt_flicker[15].ACLR
rst_n => SEL[0]~reg0.PRESET
rst_n => SEL[1]~reg0.PRESET
rst_n => SEL[2]~reg0.PRESET
rst_n => SEL[3]~reg0.PRESET
rst_n => SEL[4]~reg0.PRESET
rst_n => SEL[5]~reg0.ACLR
data_in[0] => Mult8.IN10
data_in[1] => Mult4.IN7
data_in[1] => Mult7.IN11
data_in[2] => Mult1.IN5
data_in[2] => Mult3.IN8
data_in[2] => Mult6.IN12
data_in[3] => Mult0.IN6
data_in[3] => Mult2.IN9
data_in[3] => Mult5.IN13
data_in[3] => Mux10.IN3
data_in[3] => Mux12.IN3
data_in[4] => Div3.IN13
data_in[4] => Mod4.IN13
data_in[5] => Div3.IN12
data_in[5] => Mod4.IN12
data_in[6] => Div3.IN11
data_in[6] => Mod4.IN11
data_in[7] => Div3.IN10
data_in[7] => Mod4.IN10
data_in[8] => Div3.IN9
data_in[8] => Mod4.IN9
data_in[9] => Div3.IN8
data_in[9] => Mod4.IN8
data_in[10] => Div3.IN7
data_in[10] => Mod4.IN7
data_in[11] => Selector14.IN12
data_in[11] => Selector13.IN13
data_in[11] => Selector9.IN13
data_in[12] => ~NO_FANOUT~
data_in[13] => ~NO_FANOUT~
data_in[14] => ~NO_FANOUT~
data_in[15] => ~NO_FANOUT~
ratio[0] => Decoder0.IN1
ratio[0] => Mux1.IN5
ratio[0] => Mux2.IN5
ratio[0] => Mux3.IN5
ratio[0] => Mux4.IN5
ratio[0] => Mux5.IN5
ratio[0] => Mux6.IN5
ratio[0] => Mux7.IN5
ratio[0] => Mux8.IN5
ratio[0] => Mux9.IN5
ratio[0] => Mux10.IN5
ratio[0] => Mux11.IN5
ratio[0] => Mux12.IN5
ratio[0] => Mux13.IN5
ratio[0] => Mux0.IN5
ratio[0] => Mux14.IN5
ratio[0] => Mux15.IN5
ratio[0] => Mux16.IN5
ratio[0] => Mux17.IN5
ratio[0] => Mux18.IN5
ratio[0] => Mux19.IN5
ratio[1] => Decoder0.IN0
ratio[1] => Mux1.IN4
ratio[1] => Mux2.IN4
ratio[1] => Mux3.IN4
ratio[1] => Mux4.IN4
ratio[1] => Mux5.IN4
ratio[1] => Mux6.IN4
ratio[1] => Mux7.IN4
ratio[1] => Mux8.IN4
ratio[1] => Mux9.IN4
ratio[1] => Mux10.IN4
ratio[1] => Mux11.IN4
ratio[1] => Mux12.IN4
ratio[1] => Mux13.IN4
ratio[1] => Mux0.IN4
ratio[1] => Mux14.IN4
ratio[1] => Mux15.IN4
ratio[1] => Mux16.IN4
ratio[1] => Mux17.IN4
ratio[1] => Mux18.IN4
ratio[1] => Mux19.IN4
SEL[0] <= SEL[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[1] <= SEL[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[2] <= SEL[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[3] <= SEL[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[4] <= SEL[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[5] <= SEL[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DIG[0] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
DIG[1] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
DIG[2] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
DIG[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
DIG[4] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
DIG[5] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
DIG[6] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
DIG[7] <= DIG.DB_MAX_OUTPUT_PORT_TYPE


|temp_top|key_filter:U_key_filter
clk => press[0]~reg0.CLK
clk => press[1]~reg0.CLK
clk => press[2]~reg0.CLK
clk => delay_cnt[0].CLK
clk => delay_cnt[1].CLK
clk => delay_cnt[2].CLK
clk => delay_cnt[3].CLK
clk => delay_cnt[4].CLK
clk => delay_cnt[5].CLK
clk => delay_cnt[6].CLK
clk => delay_cnt[7].CLK
clk => delay_cnt[8].CLK
clk => delay_cnt[9].CLK
clk => delay_cnt[10].CLK
clk => delay_cnt[11].CLK
clk => delay_cnt[12].CLK
clk => delay_cnt[13].CLK
clk => delay_cnt[14].CLK
clk => delay_cnt[15].CLK
clk => delay_cnt[16].CLK
clk => delay_cnt[17].CLK
clk => delay_cnt[18].CLK
clk => delay_cnt[19].CLK
clk => add_flag.CLK
clk => key_1[0].CLK
clk => key_1[1].CLK
clk => key_1[2].CLK
clk => key_0[0].CLK
clk => key_0[1].CLK
clk => key_0[2].CLK
rst_n => delay_cnt[0].ACLR
rst_n => delay_cnt[1].ACLR
rst_n => delay_cnt[2].ACLR
rst_n => delay_cnt[3].ACLR
rst_n => delay_cnt[4].ACLR
rst_n => delay_cnt[5].ACLR
rst_n => delay_cnt[6].ACLR
rst_n => delay_cnt[7].ACLR
rst_n => delay_cnt[8].ACLR
rst_n => delay_cnt[9].ACLR
rst_n => delay_cnt[10].ACLR
rst_n => delay_cnt[11].ACLR
rst_n => delay_cnt[12].ACLR
rst_n => delay_cnt[13].ACLR
rst_n => delay_cnt[14].ACLR
rst_n => delay_cnt[15].ACLR
rst_n => delay_cnt[16].ACLR
rst_n => delay_cnt[17].ACLR
rst_n => delay_cnt[18].ACLR
rst_n => delay_cnt[19].ACLR
rst_n => key_1[0].PRESET
rst_n => key_1[1].ACLR
rst_n => key_1[2].ACLR
rst_n => key_0[0].PRESET
rst_n => key_0[1].ACLR
rst_n => key_0[2].ACLR
rst_n => press[0]~reg0.ACLR
rst_n => press[1]~reg0.ACLR
rst_n => press[2]~reg0.ACLR
rst_n => add_flag.ACLR
key_in[0] => key_0[0].DATAIN
key_in[0] => press.DATAB
key_in[1] => key_0[1].DATAIN
key_in[1] => press.DATAB
key_in[2] => key_0[2].DATAIN
key_in[2] => press.DATAB
press[0] <= press[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
press[1] <= press[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
press[2] <= press[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


